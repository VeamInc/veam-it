<?php


/**
 * This class defines the structure of the 'video' table.
 *
 *
 * This class was autogenerated by Propel 1.4.2 on:
 *
 * Wed Dec 13 16:31:11 2017
 *
 *
 * This map class is used by Propel to do runtime db structure discovery.
 * For example, the createSelectSql() method checks the type of a given column used in an
 * ORDER BY clause to know whether it needs to apply SQL to make the ORDER BY case-insensitive
 * (i.e. if it's a text column type).
 *
 * @package    lib.model.map
 */
class VideoTableMap extends TableMap {

	/**
	 * The (dot-path) name of this class
	 */
	const CLASS_NAME = 'lib.model.map.VideoTableMap';

	/**
	 * Initialize the table attributes, columns and validators
	 * Relations are not initialized by this method since they are lazy loaded
	 *
	 * @return     void
	 * @throws     PropelException
	 */
	public function initialize()
	{
	  // attributes
		$this->setName('video');
		$this->setPhpName('Video');
		$this->setClassname('Video');
		$this->setPackage('lib.model');
		$this->setUseIdGenerator(true);
		// columns
		$this->addPrimaryKey('ID', 'Id', 'INTEGER', true, 11, null);
		$this->addColumn('COMPOSER', 'Composer', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DURATION', 'Duration', 'INTEGER', true, 11, null);
		$this->addColumn('EXPIRED_AT', 'ExpiredAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('EXPLANATION', 'Explanation', 'LONGVARCHAR', true, null, null);
		$this->addColumn('GENRE_ID', 'GenreId', 'INTEGER', true, 11, null);
		$this->addColumn('VIDEO_CATEGORY_ID', 'VideoCategoryId', 'INTEGER', true, 11, 0);
		$this->addColumn('VIDEO_SUB_CATEGORY_ID', 'VideoSubCategoryId', 'INTEGER', true, 11, 0);
		$this->addColumn('HAS_PREVIEW', 'HasPreview', 'INTEGER', true, 11, null);
		$this->addColumn('IS_PRICED', 'IsPriced', 'INTEGER', true, 11, null);
		$this->addColumn('KIND', 'Kind', 'INTEGER', true, 11, null);
		$this->addColumn('PRICE', 'Price', 'INTEGER', true, 11, null);
		$this->addColumn('SUB_TITLE', 'SubTitle', 'LONGVARCHAR', true, null, null);
		$this->addColumn('TITLE', 'Title', 'LONGVARCHAR', true, null, null);
		$this->addColumn('RATING', 'Rating', 'INTEGER', true, 11, null);
		$this->addColumn('SHARE_TEXT', 'ShareText', 'LONGVARCHAR', true, null, null);
		$this->addColumn('THUMBNAIL_URL', 'ThumbnailUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('THUMBNAIL_SIZE', 'ThumbnailSize', 'INTEGER', true, 11, null);
		$this->addColumn('SOURCE_URL', 'SourceUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('PREVIEW_URL', 'PreviewUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('PREVIEW_SIZE', 'PreviewSize', 'INTEGER', true, 11, null);
		$this->addColumn('PREVIEW_KEY', 'PreviewKey', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DRM_PREVIEW_URL', 'DrmPreviewUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DRM_PREVIEW_SIZE', 'DrmPreviewSize', 'INTEGER', true, 11, null);
		$this->addColumn('DRM_PREVIEW_KEY', 'DrmPreviewKey', 'LONGVARCHAR', true, null, null);
		$this->addColumn('ZIP_URL', 'ZipUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('ZIP_SIZE', 'ZipSize', 'INTEGER', true, 11, null);
		$this->addColumn('ZIP_KEY', 'ZipKey', 'LONGVARCHAR', true, null, null);
		$this->addColumn('VIDEO_URL', 'VideoUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('VIDEO_SIZE', 'VideoSize', 'INTEGER', true, 11, null);
		$this->addColumn('VIDEO_KEY', 'VideoKey', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DRM_VIDEO_URL', 'DrmVideoUrl', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DRM_VIDEO_SIZE', 'DrmVideoSize', 'INTEGER', true, 11, null);
		$this->addColumn('DRM_VIDEO_KEY', 'DrmVideoKey', 'LONGVARCHAR', true, null, null);
		$this->addColumn('PENDING', 'Pending', 'INTEGER', true, 11, null);
		$this->addColumn('GETGLUE_OBJECT', 'GetglueObject', 'LONGVARCHAR', true, null, null);
		$this->addColumn('LANDINGPAGE', 'Landingpage', 'LONGVARCHAR', true, null, null);
		$this->addColumn('SHORTEN_TITLE', 'ShortenTitle', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DISPLAY_ORDER', 'DisplayOrder', 'INTEGER', true, 11, 1);
		$this->addColumn('STATUS', 'Status', 'INTEGER', true, 11, 0);
		$this->addColumn('STATUS_TEXT', 'StatusText', 'LONGVARCHAR', true, null, null);
		$this->addColumn('DEL_FLG', 'DelFlg', 'INTEGER', true, 11, 0);
		$this->addColumn('CREATED_AT', 'CreatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('UPDATED_AT', 'UpdatedAt', 'TIMESTAMP', false, null, null);
		$this->addColumn('APP_ID', 'AppId', 'INTEGER', true, 11, null);
		// validators
	} // initialize()

	/**
	 * Build the RelationMap objects for this table relationships
	 */
	public function buildRelations()
	{
	} // buildRelations()

	/**
	 * 
	 * Gets the list of behaviors registered for this table
	 * 
	 * @return array Associative array (name => parameters) of behaviors
	 */
	public function getBehaviors()
	{
		return array(
			'symfony' => array('form' => 'true', 'filter' => 'true', ),
			'symfony_behaviors' => array(),
			'symfony_timestampable' => array('create_column' => 'created_at', 'update_column' => 'updated_at', ),
		);
	} // getBehaviors()

} // VideoTableMap
